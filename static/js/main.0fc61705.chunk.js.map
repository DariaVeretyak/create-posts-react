{"version":3,"sources":["context/PostsProvider.jsx","components/NewPost/NewPost.jsx","components/PostsList/PostsList.jsx","App.jsx","index.jsx"],"names":["PostsContext","React","createContext","PostsProvider","children","useState","posts","setPosts","contextValue","addedToPosts","item","prevState","removeItem","id","filter","post","useEffect","localStorage","getItem","JSON","parse","length","setItem","stringify","Provider","value","NewPost","useForm","mode","register","handleSubmit","getValues","reset","formState","errors","isValid","useContext","img","setImg","photoAdded","setPhotoAdded","addNewPost","newPost","name","body","Date","getTime","className","onSubmit","type","required","minLength","message","pattern","placeholder","icon","faDownload","onChange","e","file","target","files","obFile","FileReader","readAsDataURL","onload","ev","formData","result","rows","disabled","faFloppyDisk","PostsList","quantity","window","screen","width","screenWidth","setScreenWidth","lastPosts","setLastPosts","showAll","setShowAll","addEventListener","reverse","slice","map","src","alt","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fc61705.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PostsContext = React.createContext();\n\nexport const PostsProvider = ({ children }) => {\n  const [posts, setPosts] = useState([]);\n\n  const getLocalStorage = () => {\n    if (localStorage.getItem('post') !== null) {\n      setPosts(JSON.parse(localStorage.getItem('post') || ''));\n    }\n  };\n\n  const updateStorage = () => {\n    if (posts.length) {\n      localStorage.setItem('post', JSON.stringify(posts));\n    } else {\n      localStorage.removeItem('post');\n    }\n  };\n\n  const addedToPosts = (item) => {\n    setPosts(prevState => ([\n      ...prevState,\n      item,\n    ]));\n  };\n\n  const removeItem = (id) => {\n    setPosts(posts.filter(post => post.id !== id));\n  };\n\n  const contextValue = {\n    posts,\n    addedToPosts,\n    removeItem,\n  };\n\n  useEffect(() => {\n    getLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    updateStorage();\n  }, [posts]);\n\n  return (\n    <PostsContext.Provider value={contextValue}>\n      {children}\n    </PostsContext.Provider>\n  );\n};\n\nPostsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFloppyDisk, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { PostsContext } from '../../context/PostsProvider';\nimport './NewPost.scss';\n\nexport const NewPost = () => {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const { addedToPosts } = useContext(PostsContext);\n\n  const [img, setImg] = useState('');\n  const [photoAdded, setPhotoAdded] = useState('Выбрать аватарку');\n\n  const onSubmit = () => {\n    addNewPost();\n  };\n\n  const onChange = (e) => {\n    const file = e.target.files[0];\n\n    setPhotoAdded(file.name);\n\n    const obFile = new FileReader();\n\n    obFile.readAsDataURL(file);\n    obFile.onload = (ev) => {\n      const formData = ev.target.result;\n\n      setImg(formData);\n    };\n  };\n\n  const addNewPost = () => {\n    const newPost = {\n      name: getValues('name'),\n      body: getValues('body'),\n      img,\n      id: new Date().getTime(),\n    };\n\n    addedToPosts(newPost);\n    setPhotoAdded('Выбрать аватарку');\n\n    reset();\n    setImg('');\n  };\n\n  return (\n    <form\n      className=\"NewPost\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input\n        type=\"text\"\n        {...register('name', {\n          required: 'Поле обязательное к заполнению',\n          minLength: {\n            value: 2,\n            message: 'Минимум 2 символа',\n          },\n          pattern: {\n            value:\n            `^[a-zA-Z][a-zA-Z0-9-_.]{1,20}$`,\n            message: 'Пожалуйста, введите валидное значение',\n          },\n        })}\n        placeholder=\"Ваше имя*\"\n        className=\"NewPost__input\"\n      />\n      <div className=\"NewPost__errorBlock\">\n        {errors?.name && (\n          errors?.name.message\n        )}\n      </div>\n\n      <div className=\"NewPost__input\">\n        <label className=\"NewPost__uploadLabel\">\n          <FontAwesomeIcon icon={faDownload} />\n          <input\n            className=\"NewPost__uploadInput\"\n            type=\"file\"\n            name=\"img\"\n            onChange={e => onChange(e)}\n          />\n          {photoAdded}\n        </label>\n      </div>\n\n      <textarea\n        placeholder=\"Текст поста\"\n        rows={5}\n        className=\"NewPost__input NewPost__input--textarea\"\n        {...register('body', {})}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"NewPost__submit-button\"\n        disabled={!isValid}\n      >\n        <FontAwesomeIcon icon={faFloppyDisk} />\n        Добавить\n      </button>\n    </form>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PostsContext } from '../../context/PostsProvider';\n\nimport './PostsList.scss';\n\nexport const PostsList = ({ quantity }) => {\n  const [screenWidth, setScreenWidth] = useState(window.screen.width);\n  const { posts, removeItem } = useContext(PostsContext);\n  const [lastPosts, setLastPosts] = useState([]);\n\n  const [showAll, setShowAll] = useState(false);\n\n  const getLastPosts = () => {\n    setLastPosts(posts.reverse().slice(0, 5));\n  };\n\n  const handleResize = () => {\n    setScreenWidth(window.screen.width);\n  };\n\n  window.addEventListener('resize', handleResize);\n\n  useEffect(() => {\n    getLastPosts();\n  }, [posts]);\n\n  return (\n    posts && (\n      quantity === 'all' ? (\n        <>\n          {screenWidth > 768 ? (\n            <div className=\"PostsList\">\n              <h2>\n                Обьявлений:\n                {' '}\n                {posts.length}\n              </h2>\n              <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n                {posts.map(post => (\n                  <li\n                    className=\"PostsList__item\"\n                    key={post.id}\n                  >\n                    <div className=\"PostsList__block\">\n                      {post.img !== '' && (\n                        <img\n                          className=\"PostsList__ava\"\n                          src={post.img}\n                          alt=\"avatair\"\n                        />\n                      )}\n                      <div className=\"PostsList__info\">\n                        <p className=\"PostsList__postAutor\">{post.name}</p>\n                        <p>{post.body}</p>\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"PostsList__remove-button\"\n                        onClick={() => removeItem(post.id)}\n                      >\n                        X\n                      </button>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            <>\n              <button\n                className=\"PostsList__showAll-btn\"\n                type=\"button\"\n                onClick={() => setShowAll(!showAll)}\n              >\n                {!showAll ? 'Показать все посты' : 'Скрыть все посты'}\n              </button>\n              {showAll && (\n                <div className=\"PostsList\">\n                  <h2>\n                    Обьявлений:\n                    {' '}\n                    {posts.length}\n                  </h2>\n                  <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n                    {posts.map(post => (\n                      <li\n                        className=\"PostsList__item\"\n                        key={post.id}\n                      >\n                        <div className=\"PostsList__block\">\n                          {post.img !== '' && (\n                            <img\n                              className=\"PostsList__ava\"\n                              src={post.img}\n                              alt=\"avatair\"\n                            />\n                          )}\n                          <div className=\"PostsList__info\">\n                            <p className=\"PostsList__postAutor\">{post.name}</p>\n                            <p>{post.body}</p>\n                          </div>\n                          <button\n                            type=\"button\"\n                            className=\"PostsList__remove-button\"\n                            onClick={() => removeItem(post.id)}\n                          >\n                            X\n                          </button>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </>\n          )}\n        </>\n      ) : (\n        <div className=\"PostsList PostsList--last\">\n          <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n            {lastPosts.map(post => (\n              <li\n                className=\"PostsList__item\"\n                key={post.id}\n              >\n                <div className=\"PostsList__block\">\n                  {post.img !== '' && (\n                    <img\n                      className=\"PostsList__ava\"\n                      src={post.img}\n                      alt=\"avatair\"\n                    />\n                  )}\n                  <span className=\"PostsList__post\">{post.body}</span>\n                  <button\n                    type=\"button\"\n                    className=\"PostsList__remove-button\"\n                    onClick={() => removeItem(post.id)}\n                  >\n                    X\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    )\n\n  );\n};\n\nPostsList.propTypes = {\n  quantity: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { PostsProvider } from './context/PostsProvider';\nimport { NewPost } from './components/NewPost/NewPost';\nimport { PostsList } from './components/PostsList/PostsList';\nimport './App.scss';\n\nexport const App = () => (\n  <PostsProvider>\n    <div className=\"App\">\n      <div className=\"App__top\">\n        <NewPost />\n        <PostsList quantity=\"last\" />\n      </div>\n      <PostsList quantity=\"all\" />\n    </div>\n  </PostsProvider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}